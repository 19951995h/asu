<%+header%>

<h2 name="content"><%:Attended Sysupgrade%></h2>

<fieldset class="cbi-section">
	<legend>System</legend>

	<table width="100%" cellspacing="10">
		<tr><td width="33%">distro</td><td><span id="distro"></span></td></tr>
		<tr><td width="33%">version</td><td><span id="version"></span></td></tr>
		<tr><td width="33%">board</td><td><span id="board"></span></td></tr>
		<tr><td width="33%">target</td><td><span id="target"></td></tr>
		<tr><td width="33%">subtarget</td><td><span id="subtarget"></td></tr>
		<tr><td width="33%">packages</td><td><span id="packages"></td></tr>
	</table>
</fieldset>
<div id="update_info"></div>
<button onclick="update_request()" type="button" id="update_button">search for updates</button>

<%+footer%>

<script type="text/javascript">
update_server = "http://192.168.1.3:5000/";
ubus_rpc_session = "00000000000000000000000000000000";

function request(data, url) {
	var xmlhttp = new XMLHttpRequest();
	xmlhttp.open("POST", url, false);
	xmlhttp.setRequestHeader("Content-type", "application/json");
	xmlhttp.send(data);
	if (xmlhttp.status === 200) {
		return JSON.parse(xmlhttp.responseText);
	} else {
		return '{  }';
	}
}

function server_request(data, path) {
	url = update_server + path
	return request(JSON.stringify(data), url);
}

function ubus_request(command, argument, params) {
	var data = '{ "jsonrpc": "2.0", "id": 1, "method": "call", "params": [ "'+ ubus_rpc_session +'", "' + command + '", "' + argument + '", ' + params + ' ] }'
	var url = "http://192.168.1.1/ubus/";
	response = request(data, url).result[1]
	if (argument == "login") {
		ubus_rpc_session = response.ubus_rpc_session
	} else {
		return response
	}
}

function gather_facts() {
	ubus_request("session", "login", '{ "username": "root", "password": "" }');
	packages = ubus_request("attended-sysupgrade", "get_installed_pkgs", '{  }').installed_pkgs;
	board = ubus_request("attended-sysupgrade", "get_board", '{  }').board;
	system = ubus_request("system", "board", '{  }').release;
	fill_table()
}

function update_request() {
	console.log("update_request")
	update_request_dict = {}
	update_request_dict.distro = system.distribution;
	update_request_dict.version = system.version;
	update_request_dict.target = system.target.split("\/")[0];
	update_request_dict.subtarget = system.target.split("\/")[1];
	update_request_dict.packages = packages;
	response = server_request(update_request_dict, "update-request")
	update_info(response)
	/* document.getElementById("tst2").innerHTML = JSON.stringify(update_request) */
}

function update_info(data) {
	console.log("update_info")
	info_output = ""
	if (data["version"] != undefined) {
		info_output += "New Update available\n From " + system.version + " to " + data.version
		update_button()
	} else {
		info_output += "Current Version is up to date"
	}
	document.getElementById("update_info").innerHTML = info_output
}

function update_button() {
	document.getElementById("update_button").innerHTML = "download image"
	document.getElementById("update_button").onclick = image_request;
}

function image_request() {
	console.log("image_request")
	update_request_dict = {}
	update_request_dict.distro = system.distribution;
	update_request_dict.version = system.version;
	update_request_dict.target = system.target.split("\/")[0];
	update_request_dict.subtarget = system.target.split("\/")[1];
	update_request_dict.board = board;
	update_request_dict.packages = packages;
	response = server_request(update_request_dict, "image-request")
	document.getElementById("update_info").innerHTML = JSON.stringify(response)
	/* document.getElementById("tst2").innerHTML = JSON.stringify(update_request) */
}


function fill(div, input) {
    document.getElementById(div).innerHTML = JSON.stringify(input);
}

function fill_table() {
	fill("distro", system.distribution)
	fill("version", system.version)
	fill("target", system.target.split("\/")[0])
	fill("subtarget", system.target.split("\/")[1])
	fill("board", board)
	fill("packages", Object.keys(packages))
}
document.onload = gather_facts()

</script>
